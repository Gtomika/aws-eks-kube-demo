name: deployment-pipeline
run-name: Deployment Pipeline
on:
  workflow_dispatch: # manual trigger
  push:
    paths:
      - 'helm/**'
      - 'src/**'

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# docker and aws-cli are installed on the runners by default

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests with gradle
        run: ./gradlew test

  build-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build Docker image with Gradle
        run: ./gradlew bootBuildImage
      - name: List local images
        run: docker images
      - name: Authenticate to ECR repo
        run: aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 844933496707.dkr.ecr.eu-central-1.amazonaws.com
      - name: Tag image  # image will be named based on commit SHA
        run: docker tag kube-demo:latest ${{ vars.AWS_ECR_REPOSITORY }}:kube-demo-${{ github.sha }}
      - name: Publish image to ECR repository
        run: docker push ${{ vars.AWS_ECR_REPOSITORY }}:kube-demo-${{ github.sha }}
    needs: test

  helm-install:
    # this job may fail if the infra pipeline has never run before
    # in this case: wait until infra-pipeline finished and re-run this job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Generate kubectl config file
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.AWS_EKS_CLUSTER_NAME }}
      - name: Export Kube config file as base64
        run: |
          {
            echo 'EKS_KUBE_CONFIG<<EOF'
            cat ~/.kube/config | base64
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Export image name
        run: echo IMAGE_NAME="${{ vars.AWS_ECR_REPOSITORY }}:kube-demo-${{ github.sha }}" >> "$GITHUB_ENV"
      - name: Install Helm chart
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm install ${{ vars.HELM_RELEASE_NAME }} ./helm/kube-demo/ --set image.name=${{ env.IMAGE_NAME }} --wait
          kubeconfig: ${{ env.EKS_KUBE_CONFIG }}
          overrule_existing_kubeconfig: true
    needs: build-push-image